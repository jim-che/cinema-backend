<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cinema.ticket.mapper.TicketDrawMapper">
    
    <resultMap type="TicketDraw" id="TicketDrawResult">
        <result property="id"    column="id"    />
        <result property="cinemaId"    column="cinema_id"    />
        <result property="cinemaName"    column="cinema_name"    />
        <result property="movieId"    column="movie_id"    />
        <result property="movieName"    column="movie_name"    />
        <result property="sessionId"    column="session_id"    />
        <result property="isDeleted"    column="is_deleted"    />
    </resultMap>

    <sql id="selectTicketDrawVo">
        select id, cinema_id, cinema_name, movie_id, movie_name, session_id, is_deleted from ticket_draw
    </sql>

    <select id="selectTicketDrawList" parameterType="TicketDraw" resultMap="TicketDrawResult">
        <include refid="selectTicketDrawVo"/>
        <where>  
            <if test="cinemaId != null  and cinemaId != ''"> and cinema_id = #{cinemaId}</if>
            <if test="cinemaName != null  and cinemaName != ''"> and cinema_name like concat('%', #{cinemaName}, '%')</if>
            <if test="movieId != null  and movieId != ''"> and movie_id = #{movieId}</if>
            <if test="movieName != null  and movieName != ''"> and movie_name like concat('%', #{movieName}, '%')</if>
            <if test="sessionId != null  and sessionId != ''"> and session_id = #{sessionId}</if>
        </where>
    </select>
    
    <select id="selectTicketDrawById" parameterType="Long" resultMap="TicketDrawResult">
        <include refid="selectTicketDrawVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertTicketDraw" parameterType="TicketDraw" useGeneratedKeys="true" keyProperty="id">
        insert into ticket_draw
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="cinemaId != null">cinema_id,</if>
            <if test="cinemaName != null">cinema_name,</if>
            <if test="movieId != null">movie_id,</if>
            <if test="movieName != null">movie_name,</if>
            <if test="sessionId != null">session_id,</if>
            <if test="isDeleted != null">is_deleted,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="cinemaId != null">#{cinemaId},</if>
            <if test="cinemaName != null">#{cinemaName},</if>
            <if test="movieId != null">#{movieId},</if>
            <if test="movieName != null">#{movieName},</if>
            <if test="sessionId != null">#{sessionId},</if>
            <if test="isDeleted != null">#{isDeleted},</if>
         </trim>
    </insert>

    <update id="updateTicketDraw" parameterType="TicketDraw">
        update ticket_draw
        <trim prefix="SET" suffixOverrides=",">
            <if test="cinemaId != null">cinema_id = #{cinemaId},</if>
            <if test="cinemaName != null">cinema_name = #{cinemaName},</if>
            <if test="movieId != null">movie_id = #{movieId},</if>
            <if test="movieName != null">movie_name = #{movieName},</if>
            <if test="sessionId != null">session_id = #{sessionId},</if>
            <if test="isDeleted != null">is_deleted = #{isDeleted},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTicketDrawById" parameterType="Long">
        delete from ticket_draw where id = #{id}
    </delete>

    <delete id="deleteTicketDrawByIds" parameterType="String">
        delete from ticket_draw where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>