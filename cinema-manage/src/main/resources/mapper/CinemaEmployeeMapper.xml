<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cinema.manage.mapper.CinemaEmployeeMapper">
    
    <resultMap type="CinemaEmployee" id="CinemaEmployeeResult">
        <result property="id"    column="id"    />
        <result property="cinemaId"    column="cinema_id"    />
        <result property="cinemaName"    column="cinema_name"    />
        <result property="employeeType"    column="employee_type"    />
        <result property="employeeId"    column="employee_id"    />
        <result property="workHours"    column="work_hours"    />
        <result property="isDeleted"    column="is_deleted"    />
    </resultMap>

    <sql id="selectCinemaEmployeeVo">
        select id, cinema_id, cinema_name, employee_type, employee_id, work_hours, is_deleted from cinema_employee
    </sql>

    <select id="selectCinemaEmployeeList" parameterType="CinemaEmployee" resultMap="CinemaEmployeeResult">
        <include refid="selectCinemaEmployeeVo"/>
        <where>  
            <if test="cinemaName != null  and cinemaName != ''"> and cinema_name like concat('%', #{cinemaName}, '%')</if>
            <if test="employeeType != null "> and employee_type = #{employeeType}</if>
        </where>
    </select>
    
    <select id="selectCinemaEmployeeById" parameterType="Long" resultMap="CinemaEmployeeResult">
        <include refid="selectCinemaEmployeeVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertCinemaEmployee" parameterType="CinemaEmployee">
        insert into cinema_employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="cinemaId != null and cinemaId != ''">cinema_id,</if>
            <if test="cinemaName != null and cinemaName != ''">cinema_name,</if>
            <if test="employeeType != null">employee_type,</if>
            <if test="employeeId != null and employeeId != ''">employee_id,</if>
            <if test="workHours != null and workHours != ''">work_hours,</if>
            <if test="isDeleted != null">is_deleted,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="cinemaId != null and cinemaId != ''">#{cinemaId},</if>
            <if test="cinemaName != null and cinemaName != ''">#{cinemaName},</if>
            <if test="employeeType != null">#{employeeType},</if>
            <if test="employeeId != null and employeeId != ''">#{employeeId},</if>
            <if test="workHours != null and workHours != ''">#{workHours},</if>
            <if test="isDeleted != null">#{isDeleted},</if>
         </trim>
    </insert>

    <update id="updateCinemaEmployee" parameterType="CinemaEmployee">
        update cinema_employee
        <trim prefix="SET" suffixOverrides=",">
            <if test="cinemaId != null and cinemaId != ''">cinema_id = #{cinemaId},</if>
            <if test="cinemaName != null and cinemaName != ''">cinema_name = #{cinemaName},</if>
            <if test="employeeType != null">employee_type = #{employeeType},</if>
            <if test="employeeId != null and employeeId != ''">employee_id = #{employeeId},</if>
            <if test="workHours != null and workHours != ''">work_hours = #{workHours},</if>
            <if test="isDeleted != null">is_deleted = #{isDeleted},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCinemaEmployeeById" parameterType="Long">
        delete from cinema_employee where id = #{id}
    </delete>

    <delete id="deleteCinemaEmployeeByIds" parameterType="String">
        delete from cinema_employee where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>